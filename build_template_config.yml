source_dir: "."  # Directory containing the source files to build the template
template_dir: "template"  # Directory where the template will be built
static_template_dir: "static_template"  # Directory with static files to be included as-is

# These files and directories will be copied from source_dir to template_dir
to_be_included: [
    "src",
    "tests",
    "pyproject.toml",
    ".gitignore",
    ".pre-commit-config.yaml",
    ".github",
]

# These files and directories will be removed from the template_dir after rendering
to_be_excluded: [
    "src/build_template",
    "tests/copier",
    ".github/workflows/copier_ci.yml",
    ".github/workflows/github_release.yaml",
    ".github/workflows/github_release.yml",
]

# Mapping of search -> replace (ordered, like the bash KEYWORD_MAP)
keyword_map:
    # Project
    author_name: "BioVision Center Team"
    author_email: "task_author@example.com"
    project_name: "fractal-tasks-template"
    package_name: "fractal_tasks_template"
    project_url: "project_url.uzh.ch"
    project_short_description: "Collection of example tasks for the Fractal framework"
    project_license: "BSD-3-Clause"
    # Task-specific
    segmentation_task: "Threshold Segmentation"
    segmentation_module: "threshold_segmentation_task"
    image_processing_task: "Gaussian Blur"
    image_processing_module: "gaussian_blur_task"
    feature_task: "Region Props Features"
    feature_module: "region_props_features_task"

# Conditional files to exclude from the template
# Files that include jinja placeholders that should only be present
# if certain conditions are met (e.g. include_segmentation_task is true)
# (pattern in filename -> condition variable)
conditional_patterns:
    segmentation_module: include_segmentation_task
    image_processing_module: include_image_processing_task
    feature_module: include_feature_task
