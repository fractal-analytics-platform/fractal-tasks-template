from pathlib import Path

import pytest
from ngio import create_synthetic_ome_zarr

from {{ package_name }}.{{ feature_module }} import (
    {{ feature_module }},
)


@pytest.mark.parametrize(
    "shape, axes",
    [
        ((64, 64), "yx"),
        ((1, 64, 64), "cyx"),
        ((3, 64, 64), "cyx"),
        ((4, 64, 64), "tyx"),
        ((1, 64, 64), "zyx"),
        ((1, 1, 64, 64), "czyx"),
        ((1, 10, 64, 64), "czyx"),
        ((1, 2, 64, 64), "czyx"),
        ((1, 1, 64, 64), "tzyx"),
        ((1, 3, 64, 64), "tcyx"),
        ((1, 1, 10, 64, 64), "tczyx"),
    ],
)
def test_{{ image_processing_module }}(tmp_path: Path, shape: tuple[int, ...], axes: str):
    test_data_path = tmp_path / "data.zarr"

    ome_zarr = create_synthetic_ome_zarr(
        store=test_data_path,
        shape=shape,
        overwrite=False,
        axes_names=axes,
    )
    {{ feature_module }}(
        zarr_url=str(test_data_path), label_image_name="nuclei", overwrite=False
    )

    # Check that the feature table was created
    assert "region_props_features" in ome_zarr.list_tables()
    table_df = ome_zarr.get_feature_table(name="region_props_features").dataframe
    # Check that the table is not empty
    assert not table_df.empty
    # Check if area and mean_intensity columns are present
    assert all(col in table_df.columns for col in ["area", "mean_intensity-0"]), (
        table_df.columns
    )
    # Check if label is the index
    assert table_df.index.name == "label"
    # DISCLAIMER: This is only a very basic test.
    # More comprehensive tests should be implemented based on the expected
    # results not only the presence of a feature table.
